trigger:
  branches:
    include:
      - main
      - master
      - develop

pool:
  vmImage: 'windows-latest'

stages:
  - stage: Playwright_Tests_Windows
    displayName: Playwright Tests (Windows)
    jobs:
      - job: RunTests_Windows
        displayName: Run Playwright Tests on Windows
        pool:
          vmImage: 'windows-latest'
        strategy:
          parallel: 2 # Shard tests into 2 jobs
        steps:
          - checkout: self
          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
          - script: npm ci
            displayName: 'Install dependencies'
          - script: npx playwright install --with-deps
            displayName: 'Install Playwright browsers'
          - script: npx playwright test --project=chromium --project=firefox --project=edge --shard=$(System.JobPositionInPhase)/$(System.TotalJobsInPhase) --reporter=html,junit
            displayName: 'Run Playwright tests (sharded)'
            continueOnError: true
          - task: PublishTestResults@2
            condition: succeededOrFailed()
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/test-results/**/*.xml'
              failTaskOnFailedTests: false
          - task: PublishBuildArtifacts@1
            condition: succeededOrFailed()
            inputs:
              PathtoPublish: 'playwright-report'
              ArtifactName: 'playwright-report-windows'
          - task: PublishBuildArtifacts@1
            condition: succeededOrFailed()
            inputs:
              PathtoPublish: '**/screenshots'
              ArtifactName: 'screenshots-windows'

